
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace computer
{
    [DebuggerDisplay("{model} * 3.67")]
    class computer
    {
        public string model;
        public int price;
        public int numberOfProcessors;
        public float sceenSize = 0f;
        public bool isTurnedOn;
        public void TellMeThePrice()
            {
            Console.WriteLine($"the price is {price}");
            }
        public void TellMeTheScreenSize()
        {
            Console.WriteLine($"the screen size is {sceenSize}");
        }
        public void TurnOn()
        {
            isTurnedOn = true;
        }
        public void TurnOff()
        {
            isTurnedOn = false;
        }
        public void AddAProcessor()
        {
            numberOfProcessors++;
        }
        public override string ToString()
        {
            return $"model: {model} price: {price} number of processors: {numberOfProcessors} sceen size: {sceenSize}";
        }

    }
}

// i did the computer in general and the specific computers in different files like you said in the visual studio but i put them togeter
// here 

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace computer
{
    [DebuggerDisplay("{model} * 3.67")]
    class computer
    {
        public string model;
        public int price;
        public int numberOfProcessors;
        public float sceenSize = 0f;
        public bool isTurnedOn;
        public void TellMeThePrice()
            {
            Console.WriteLine($"the price is {price}");
            }
        public void TellMeTheScreenSize()
        {
            Console.WriteLine($"the screen size is {sceenSize}");
        }
        public void TurnOn()
        {
            isTurnedOn = true;
        }
        public void TurnOff()
        {
            isTurnedOn = false;
        }
        public void AddAProcessor()
        {
            numberOfProcessors++;
        }
        public override string ToString()
        {
            return $"model: {model} price: {price} number of processors: {numberOfProcessors} sceen size: {sceenSize}";
        }

    }
}

